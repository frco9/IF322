include "taxonomy.diaspec";

/* Présent dans taxonomy */ 

/*
device Device {
	attribute id as String;
	source isAlive as Boolean;
}

device PhysicalDevice extends Device {
	attribute location as String;
	attribute user as String;
}

device Sensor extends PhysicalDevice {
}

device EnergyMeter extends Sensor {
}

device ElectricMeter extends EnergyMeter {
	source currentElectricConsumption as Float;
}

device MotionDetector extends Sensor {
	source motion as Boolean;
}

action Notification {
	notify(level as NotificationLevel);
}

enumeration NotificationLevel {
	INFORMATION, WARNING, CRITICAL
}

device Notifier extends PhysicalDevice {
	action Notification;	
}
*/

/*Fin du présent dans la taxonomy */



/* Device ElectricMeter déjà present dans Taxonomy */

/* Device Cooker déjà présent dans la Taxonomy */

/* Device Timer */

device Tablet extends Notifier{
	source notificationValidated as Boolean;
	action DisplayNotification;	
}

// Afficher la notification

action DisplayNotification{
	displayNotification(notification as String);	
}



// Danger dû à l'absence de la personne et à la consommation électrique 


enumeration DangerLevel{
	ZERO, REMIND, ALERT, STOP
}

context Danger as DangerLevel {
	
	// Pour traiter la consommation électrique
	when provided currentElectricConsumption from ElectricMeter
	no publish;
	
	//Etat de la cuisinière
	when provided status from Cooker
	no publish;
	
	//Pour traiter la présence
	when provided motion from MotionDetector
	no publish;
	
	// Fournir une horloge référence
	when provided timerTriggered from Timer
	always publish;
	
	// Détecter une notification validée
	when provided notificationValidated from Tablet
	no publish;

} 

// Notifications

controller RemindUser{
	
	when provided Danger
	do DisplayNotification on Tablet,
	   ScheduleTimer on Timer;	
}

//Arrêt de la cuisinière
controller StopCooker{
	when provided Danger
	do Off on Cooker;
}

